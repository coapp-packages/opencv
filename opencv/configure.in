dnl Process this file with autoconf to produce a configure script.
AC_INIT(opencv-config.in)

AM_CONFIG_HEADER(cvconfig.h)

dnl Set various version strings
MMAJOR=0
MMINOR=9
MSUBMINOR=4
INTERFACE_AGE=0
BINARY_AGE=0
VERSION=$MMAJOR.$MMINOR.$MSUBMINOR

AC_SUBST(MMAJOR)
AC_SUBST(MMINOR)
AC_SUBST(MSUBMINOR)
AC_SUBST(INTERFACE_AGE)
AC_SUBST(BINARY_AGE)
AC_SUBST(VERSION)

dnl libtool versioning
LT_RELEASE=$MMAJOR.$MMINOR
LT_CURRENT=`expr $MSUBMINOR - $INTERFACE_AGE`
LT_REVISION=$INTERFACE_AGE
LT_AGE=`expr $BINARY_AGE - $INTERFACE_AGE`
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)


dnl Detect the canonical host and target build environment
dnl AC_CANONICAL_HOST
dnl AC_CANONICAL_TARGET

AM_INIT_AUTOMAKE(OpenCV, $VERSION)

dnl Checks for programs.
AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_RANLIB

AM_DISABLE_STATIC
AM_PROG_LIBTOOL

dnl Checks for header files.
AC_PATH_X
dnl AC_HEADER_STDC
dnl AC_CHECK_HEADER(stdlib.h,,[AC_MSG_ERROR([Standard C library headers are missing])])

dnl Checks for typedefs, structures, and compiler characteristics.
dnl AC_C_CONST
dnl AC_C_INLINE

dnl Add compiler-specific optimization flags

CXXFLAGS="-fno-rtti"

dnl Check whether to include debugging code

AC_MSG_CHECKING([whether to build debug version (no optimization)])
dnl See if the user wants aggressive optimizations of the code
AC_ARG_ENABLE(debug,
[  --debug      Build debug version (no optimization) [default=no]],
              , debug=no)
if test x$debug = xyes; then
    AC_MSG_RESULT([yes])
    if test x$ac_cv_prog_gcc = xyes; then
        CXXFLAGS="-g3 -DDEBUG -D_DEBUG -O0"
    fi
else
    AC_MSG_RESULT([no])
    case "$target" in
    i686-*-*)
        if test x$ac_cv_prog_gcc = xyes; then
            CXXFLAGS="-mcpu=i686 -march=i686 -ffast-math"
        fi
        ;;
    esac
    if test x$ac_cv_prog_gcc = xyes; then
        CXXFLAGS="-fomit-frame-pointer"
    fi
    CXXFLAGS="$CXXFLAGS -g -O3 -DNDEBUG"
fi


dnl
dnl ***************** Image codecs configuration *****************
dnl
SAVELIBS="$LIBS"
IMAGELIBS=""

AC_SUBST(IMAGELIBS)

AC_CHECK_HEADER(jpeglib.h,
    AC_CHECK_LIB(jpeg, jpeg_destroy_decompress,
	AC_DEFINE(HAVE_JPEG,,"IJG JPEG codec library is present" )
	IMAGELIBS="$IMAGELIBS -ljpeg"))

AC_CHECK_HEADER(zlib.h,
    AC_CHECK_LIB(z, gzopen,
	AC_DEFINE(HAVE_ZLIB,,"LZ77 compression/decompression library is present (used for PNG)")
	IMAGELIBS="$IMAGELIBS -lz"
	LIBS="$LIBS -lz"))

AC_CHECK_HEADER(png.h, AC_DEFINE(HAVE_PNG_H,,"png.h needs to be included"))
AC_CHECK_HEADER(libpng/png.h, AC_DEFINE(HAVE_LIBPNG_PNG_H,,"libpng/png.h needs to be included"))

if test x$ac_cv_header_png_h = xyes -o x$ac_cv_header_libpng_png_h = xyes; then
    AC_CHECK_LIB(png, png_read_rows,
	AC_DEFINE(HAVE_PNG,,"PNG codec library is present")
	IMAGELIBS="-lpng $IMAGELIBS"
	LIBS="-lpng $LIBS"
	AC_CHECK_FUNCS(png_get_valid png_set_tRNS_to_alpha))
fi

AC_CHECK_HEADER(tiff.h,
    AC_CHECK_LIB(tiff, TIFFReadRGBAStrip,
	AC_DEFINE(HAVE_TIFF,,"TIFF codec library is present")
	IMAGELIBS="$IMAGELIBS -ltiff"
	LIBS="$LIBS -ltiff"))

dnl Restore original LIBS settings...
LIBS="$SAVELIBS"

dnl
dnl ****************** Motif configuration *********************
dnl 

MOTIFLIBS=""

AC_CHECK_FILE(/usr/X11R6/include/Xm/Xm.h,MOTIFLIBS="-L/usr/X11R6/lib -lXm -lMrm -lUil",
    [AC_MSG_ERROR([Couldn't find Motif headers.
                  Please, install openmotif-devel or lesstif-devel packages])])

AC_SUBST(MOTIFLIBS)


dnl
dnl ****************** FFMPEG configuration **********************
dnl

FFMPEGLIBS=""

AC_CHECK_HEADER(ffmpeg/avcodec.h,
    [AC_CHECK_LIB(avcodec, avcodec_decode_video,
        AC_DEFINE(HAVE_FFMPEG,,"FFMpeg codec libs are present")
        FFMPEGLIBS="-lavcodec",
        [AC_MSG_ERROR([libavcodec.so is not found.
                   See INSTALL to fix the problem])])],
    [AC_MSG_ERROR([ffmpeg headers are not present.
                   See INSTALL to fix the problem])])
AC_SUBST(FFMPEGLIBS)


dnl
dnl ***************** Application-specific part ****************
dnl


AC_ARG_WITH(apps, dnl
  [--with-apps             do you wish the demo apps be built [default=no] ],
    with_apps=$withval, with_apps=no)
AC_SUBST(with_apps)


if test "$with_apps" = yes; then

dnl
dnl *****************  Tcl/Tk configuration ********************
dnl 
TCLPATH=/usr/lib
AC_ARG_WITH(tcl, dnl
  [--with-tcl             where is tclConfig.sh and tkConfig.sh [default=/usr/lib]],
  TCLPATH=$withval)

TKPATH=/usr/lib
AC_ARG_WITH(tk, dnl
  [--with-tk              where is tclConfig.sh and tkConfig.sh [default=/usr/lib]],
  TKPATH=$withval)

if test -f ${TCLPATH}/tclConfig.sh; then
source ${TKPATH}/tclConfig.sh
else
AC_MSG_ERROR([Can't find ${TCLPATH}/tclConfig.sh Give the correct path to --with-tcl key or install tcl properly or configure --without-apps])
fi

if test $TCL_MAJOR_VERSION -lt 8 -o $TCL_MINOR_VERSION -lt 3; then
AC_MSG_ERROR( You need tcl>=8.3 and you have $TCL_VERSION)
fi

TCLLIB=tcl${TCL_VERSION}
AC_CHECK_LIB($TCLLIB,Tcl_Init,,[AC_MSG_ERROR([Couldn't link with -l${TCLLIB} Get tcl/tk from scriptics.com or build without apps])])

if test -f ${TKPATH}/tkConfig.sh; then
source ${TKPATH}/tkConfig.sh
else
AC_MSG_ERROR([Can't find ${TKPATH}/tkConfig.sh Give the correct path to --with-tk key or install tcl/tk properly or configure --without-apps])
fi

if test $TK_MAJOR_VERSION -lt 8 -o $TK_MINOR_VERSION -lt 3; then
AC_MSG_ERROR( You need tcl/tk>=8.3 and you have $TK_VERSION)
fi

TKLIB=tk${TK_VERSION}
AC_CHECK_LIB($TKLIB,Tk_Init,,[AC_MSG_ERROR([Couldn't link with -l${TKLIB} Get tcl/tk from scriptics.com or build without apps])])

TCLTKLIB="-l${TCLLIB} -l${TKLIB}"
AC_SUBST(TCLTKLIB)

ADDONS=apps
AC_SUBST(ADDONS)


dnl
dnl *****************  FLTK configuration ********************
dnl 

FLTKCONFIG=/usr/bin/fltk-config
AC_ARG_WITH(fltk-config, dnl
  [--with-fltk-config      where is fltk-config [default=fltk-config]],
  FLTKCONFIG=$withval)
AC_SUBST(FLTKCONFIG)

AC_MSG_CHECKING(FLTK)

if test -x ${FLTKCONFIG}; then
echo AC_MSG_RESULT([yes  (${FLTKCONFIG})])
else
AC_MSG_ERROR([Can't find ${FLTKCONFIG}, use --with-fltk-config=<full_fltk-config_path> option])
fi

fi # "$with_apps" = no

AC_SUBST(DEBUG)
AC_PATH_XTRA


AC_OUTPUT([
Makefile
OpenCV.spec
_dsw/Makefile
cv/Makefile
cv/include/Makefile
cv/src/Makefile
cvaux/Makefile
cvaux/include/Makefile
cvaux/src/Makefile
docs/Makefile
samples/Makefile
otherlibs/Makefile
otherlibs/highgui/Makefile
otherlibs/cvcam/Makefile
otherlibs/cvcam/include/Makefile
otherlibs/cvcam/src/Makefile
otherlibs/cvcam/src/unix/Makefile
tests/Makefile
tests/trs/Makefile
tests/trs/include/Makefile
tests/trs/src/Makefile
tests/cv/Makefile
tests/cv/src/Makefile
apps/Makefile
apps/cvcsdemo/Makefile
apps/cvcsdemo/pictures/Makefile
apps/vmdemotk/Makefile
apps/cvlkdemo/Makefile
apps/cvlkdemo/pictures/Makefile
apps/HaarFaceDetect/Makefile
utils/Makefile
utils/cvinfo/Makefile
opencv-config],[chmod +x opencv-config])


