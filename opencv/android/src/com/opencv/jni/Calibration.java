/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.opencv.jni;

public class Calibration {
  private long swigCPtr;
  protected boolean swigCMemOwn;
  public Calibration(long cPtr, boolean cMemoryOwn) {
	swigCMemOwn = cMemoryOwn;
	swigCPtr = cPtr;
  }
  public static long getCPtr(Calibration obj) {
	return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opencvJNI.delete_Calibration(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setPatternsize(Size value) {
    opencvJNI.Calibration_patternsize_set(swigCPtr, this, Size.getCPtr(value), value);
  }

  public Size getPatternsize() {
    long cPtr = opencvJNI.Calibration_patternsize_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Size(cPtr, false);
  }

  public Calibration() {
    this(opencvJNI.new_Calibration(), true);
  }

  public boolean detectAndDrawChessboard(int idx, image_pool pool) {
    return opencvJNI.Calibration_detectAndDrawChessboard(swigCPtr, this, idx, image_pool.getCPtr(pool), pool);
  }

  public void resetChess() {
    opencvJNI.Calibration_resetChess(swigCPtr, this);
  }

  public int getNumberDetectedChessboards() {
    return opencvJNI.Calibration_getNumberDetectedChessboards(swigCPtr, this);
  }

  public void calibrate(String filename) {
    opencvJNI.Calibration_calibrate(swigCPtr, this, filename);
  }

  public void drawText(int idx, image_pool pool, String text) {
    opencvJNI.Calibration_drawText(swigCPtr, this, idx, image_pool.getCPtr(pool), pool, text);
  }

}
